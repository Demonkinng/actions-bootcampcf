name: Deploy Express App

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    # Contenedor de Docker
    # services:
    #   redis:
    #     image: redis
    #     ports:
    #       - 6379:6379

    steps:
      # Relacionado al container creado
      # - name: Instalar redis cli
      #   run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      # - name: Test redis
      #   run: redis-cli -h localhost -p 6379 ping

      - name: print variable
        run: echo "${{ vars.NAME}}" # Contexto para obtener valor de env del repo

      - name: checkout
        uses: actions/checkout@v4

      - name: setup
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Instalar dependencias
        run: npm install

      - name: Run Test
        run: npm run test

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: public/

  deploy:
    # Por defecto si un job falla, los siguientes no se ejecutan
    # Hay 3 metodos para forzar la ejecucion: always, success, failure
    # failure: se ejecuta si el job falla
    # success: se ejecuta si el job es exitoso
    # always: se ejecuta siempre, aunque falle el job
    # if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      pages: write # Permiso para escribir en GitHub Pages
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment-pages.outputs.page_url}}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment-pages
        uses: actions/deploy-pages@v4
